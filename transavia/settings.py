"""
Django settings for transavia project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path
import environ
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
ROOT_DIR = (
    environ.Path(__file__) - 3
)
APPS_DIR = ROOT_DIR.path("app")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'p0pxfna31vorwf!n8=vekrb4pz4v^2q&q_jwpt$s_*kwg@qda1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition
LOCAL_APPS = [
    'app.core',
]

THIRD_PARTY_APPS = [
    'rest_framework',
    'django_filters',
    'django_extensions',
    'drf_yasg',
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
] + LOCAL_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'transavia.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'transavia.wsgi.application'

PROD_MODE = os.getenv('PROD_MODE', True)

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASE_SCHEMA = 'public'

DATABASES = {
    "default": dj_database_url.config(
        default="postgres://{db_user}:{db_password}@{db_host}:5432/{db_name}?currentSchema={schema}".format(
            db_user=os.getenv('DB_USER', 'transavia'),
            db_password=os.getenv('DB_PASSWORD', 'transavia'),
            db_host=os.getenv('DB_HOST', 'localhost'),
            db_name=os.getenv('DB_NAME', 'transavia'),
            schema=DATABASE_SCHEMA)#, conn_max_age=600
    )
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": os.getenv("REDIS_URL", "redis://127.0.0.1:6379/1"),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        "IGNORE_EXCEPTIONS": True,
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Amadeus sources
WSTRANS = {
    "COUNTRIES_URL": os.getenv(
        "COUNTRIES_URL", "http://staging-ws.epower.amadeus.com/wstrans/MasterData/Countries.xml"
    ),
    "CITIES_URL": os.getenv("CITIES_URL", "http://staging-ws.epower.amadeus.com/wstrans/MasterData/Cities.xml"),
    "AIRPORTS_URL": os.getenv("AIRPORTS_URL", "http://staging-ws.epower.amadeus.com/wstrans/MasterData/Airports.xml")
}
